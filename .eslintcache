[{"/Users/konstantin/projects/bitcoin-tickers-react/src/index.js":"1","/Users/konstantin/projects/bitcoin-tickers-react/src/App.js":"2","/Users/konstantin/projects/bitcoin-tickers-react/src/reportWebVitals.js":"3","/Users/konstantin/projects/bitcoin-tickers-react/src/components/pages/IndexPage/index.js":"4","/Users/konstantin/projects/bitcoin-tickers-react/src/config/apis.js":"5","/Users/konstantin/projects/bitcoin-tickers-react/src/config/pagination.js":"6","/Users/konstantin/projects/bitcoin-tickers-react/src/components/TableCellSort/index.js":"7","/Users/konstantin/projects/bitcoin-tickers-react/src/components/TableCellValue/index.js":"8"},{"size":478,"mtime":1610215119896,"results":"9","hashOfConfig":"10"},{"size":413,"mtime":1611244071924,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610213640741,"results":"12","hashOfConfig":"10"},{"size":4653,"mtime":1611251479748,"results":"13","hashOfConfig":"10"},{"size":180,"mtime":1611244071931,"results":"14","hashOfConfig":"10"},{"size":51,"mtime":1610296259156,"results":"15","hashOfConfig":"10"},{"size":622,"mtime":1611244071925,"results":"16","hashOfConfig":"10"},{"size":199,"mtime":1611251275207,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"xctxgl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/konstantin/projects/bitcoin-tickers-react/src/index.js",[],["39","40"],"/Users/konstantin/projects/bitcoin-tickers-react/src/App.js",[],"/Users/konstantin/projects/bitcoin-tickers-react/src/reportWebVitals.js",[],"/Users/konstantin/projects/bitcoin-tickers-react/src/components/pages/IndexPage/index.js",["41"],"import { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button\n} from \"@material-ui/core\";\nimport openSocket from \"socket.io-client\";\nimport classnames from \"classnames\";\n\n// Components\nimport TableCellSort from \"../../TableCellSort\";\nimport TableCellValue from \"../../TableCellValue\";\n\n// Configs\nimport apisConfig from \"../../../config/apis\";\nimport paginationConfig from \"../../../config/pagination\";\n\nconst buildShowingRows = (originRows, limit, sortBy, sortDirection) => {\n  if (typeof originRows[0] === \"undefined\") {\n    return [];\n  }\n\n  var result = originRows.slice();\n\n  if (sortBy && sortDirection) {\n    const directionIndex = sortDirection === \"asc\" ? 1 : -1;\n    result.sort((a, b) =>\n      a[sortBy] > b[sortBy] ? directionIndex : -directionIndex\n    );\n  }\n\n  if (limit) {\n    result = result.slice(0, limit);\n  }\n\n  return result;\n};\n\nconst IndexPage = () => {\n  // State definitions\n  const [tableState, setTableState] = useState({\n    rows: [],\n    lastChangedSymbol: null\n  });\n  const [limit, setLimit] = useState(paginationConfig.defaultShowingItemsCount);\n  const [sortBy, setSortBy] = useState(null);\n  const [sortDirection, setSortDirection] = useState(null);\n  var socket = null;\n  const columns = [\n    {\n      field: \"symbol\",\n      headerName: \"Ticker\"\n    },\n    {\n      field: \"bid\",\n      headerName: \"Bid\"\n    },\n    {\n      field: \"ask\",\n      headerName: \"Ask\"\n    },\n    {\n      field: \"high\",\n      headerName: \"High\"\n    },\n    {\n      field: \"low\",\n      headerName: \"Low\"\n    },\n    {\n      field: \"last\",\n      headerName: \"Last\"\n    }\n  ];\n\n  const insertToRows = new_value => {\n    const new_rows = tableState.rows.slice();\n\n    for (var i = 0, len = new_rows.length; i < len; i++) {\n      if (new_rows[i][\"symbol\"] === new_value[\"symbol\"]) {\n        new_rows[i] = new_value;\n        setTableState({\n          rows: new_rows,\n          lastChangedSymbol: new_value[\"symbol\"]\n        });\n\n        return;\n      }\n    }\n  };\n\n  useEffect(() => {\n    const promise = async () =>\n      await fetch(apisConfig.restBaseUrl + apisConfig.endpoints.getTickers, {\n        mode: \"no-cors\",\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json());\n\n    promise().then(data => {\n      setTableState({\n        rows: data,\n        lastChangedSymbol: null\n      });\n\n      const initSocketPromise = async () =>\n        await fetch(apisConfig.initSocketBaseUrl + \"/init\", {\n          method: \"POST\",\n          mode: \"no-cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        });\n\n      initSocketPromise().then(data => {\n        socket = openSocket(apisConfig.socketUrl);\n        socket.on(\"ticker\", data => {\n          insertToRows(data);\n        });\n      });\n    });\n  }, []);\n\n  const showingRows = buildShowingRows(\n    tableState.rows,\n    limit,\n    sortBy,\n    sortDirection\n  );\n\n  return (\n    <div className=\"index-page\">\n      {limit && (\n        <div className=\"show-all-button-row\">\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={() => setLimit(null)}\n          >\n            Показать все\n          </Button>\n        </div>\n      )}\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns.map(column => (\n              <TableCell key={`column-${column.field}`}>\n                <TableCellSort\n                  {...column}\n                  sortBy={sortBy}\n                  sortDirection={sortDirection}\n                  onClick={() => {\n                    setSortBy(column.field);\n                    setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n                  }}\n                />\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showingRows && (\n            <>\n              {showingRows.map(row => (\n                <TableRow\n                  className={classnames({\n                    \"last-updated-row\":\n                      row[\"symbol\"] === tableState.lastChangedSymbol\n                  })}\n                  key={`table-row-${row[\"symbol\"]}`}\n                >\n                  {columns.map(column => (\n                    <TableCell key={`column-${column.field}`}>\n                      <TableCellValue value={row[column.field]} />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </>\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default IndexPage;\n","/Users/konstantin/projects/bitcoin-tickers-react/src/config/apis.js",["42"],"export default {\n  restBaseUrl: \"/api/2\",\n  socketUrl: \"ws://localhost:9001\",\n  initSocketBaseUrl: \"http://localhost:9001\",\n\n  endpoints: {\n    getTickers: \"/public/ticker\"\n  }\n};\n","/Users/konstantin/projects/bitcoin-tickers-react/src/config/pagination.js",["43"],"export default {\n  defaultShowingItemsCount: 50\n};\n","/Users/konstantin/projects/bitcoin-tickers-react/src/components/TableCellSort/index.js",[],["44","45"],"/Users/konstantin/projects/bitcoin-tickers-react/src/components/TableCellValue/index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":121,"column":18,"nodeType":"52","endLine":121,"endColumn":50},{"ruleId":"53","severity":1,"message":"54","line":1,"column":1,"nodeType":"55","endLine":9,"endColumn":3},{"ruleId":"53","severity":1,"message":"54","line":1,"column":1,"nodeType":"55","endLine":3,"endColumn":3},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["58"],["59"],"no-global-assign","no-unsafe-negation"]